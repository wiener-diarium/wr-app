name: Build and Deploy

on:
  push:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Get data and build edition templates
    runs-on: ubuntu-latest
    env:
      ANT_OPTS: -Xmx5g
    steps:
      - name: Checkout your repository using git
        uses: actions/checkout@v4
      - name: Install Saxon, ant
        run: |
          apt-get update && apt-get install openjdk-11-jre-headless ant -y --no-install-recommend
          ./scripts/shellscripts/dl_saxon.sh
      - name: Fetch Edition Data
        run: |
          ./scripts/shellscripts/fetch_data.sh
      - name: Build the site
        run: |
          ant -f ./scripts/ant/build.xml
      # - name: Copy Raw files to public directory
      #   run: |
      #     ./scripts/shellscripts/copy_data_raw.sh
      - name: Cache the site
        uses: actions/cache@v3
        env:
          cache-name: cache-site-build
        with:
          path: ./edition
          key:
            build-${{ env.cache-name }}-${{ hashFiles('**/editions.xsl') }}-${{
            hashFiles('**/build.xml') }}
          restore-keys: |
            build-${{ env.cache-name }}-
            build-

  astro:
    needs: [build]
    runs-on: ubuntu-latest
    env:
      KEYSTATIC_GITHUB_CLIENT_ID: ${{ secrets.KEYSTATIC_GITHUB_CLIENT_ID }}
      KEYSTATIC_GITHUB_CLIENT_SECRET: ${{ secrets.KEYSTATIC_GITHUB_CLIENT_SECRET }}
      KEYSTATIC_SECRET: ${{ secrets.KEYSTATIC_SECRET }}
      PUBLIC_KEYSTATIC_GITHUB_APP_SLUG: "wiener-diarium-keystatic"
      SKIP_KEYSTATIC: true
    steps:
      - name: Checkout your repository using git
        uses: actions/checkout@v4
      - name: Use chache
        uses: actions/cache@v3
        env:
          cache-name: cache-site-build
        with:
          path: ./edition
          key:
            build-${{ env.cache-name }}-${{ hashFiles('**/editions.xsl') }}-${{
            hashFiles('**/build.xml') }}
          restore-keys: |
            build-${{ env.cache-name }}-
            build-
      # - name: Copy Raw files to public directory
      #   run: |
      #     ./scripts/shellscripts/copy_data_public.sh
      - name: Install, build, and upload your site
        uses: withastro/action@v2
        with:
          node-version: 20

  deploy:
    needs: [astro]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
