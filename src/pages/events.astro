---
import { getCollection } from "astro:content";

import PageCard from "../components/PageCard.astro";
import PageSection from "../components/PageSection.astro";
import Page from "../layouts/Page.astro";
import PageContent from "../layouts/PageContent.astro";
import { baseurl, createBaseurl } from "../lib/baseurl.ts";

interface Author {
	firstName: string;
	lastName: string;
	middleName?: string;
}

const events = await getCollection("events");
---

<Page title="Events" baseurl={baseurl}>
	<PageContent classNames={["container", "mx-auto", "mb-auto", "max-w-7xl"]}>
		<div class="flex flex-col">
			<PageSection>
				<h2 class="border-b border-[#00000026] text-xl font-medium">
					<span class="-my-px inline-flex border-b border-[#212529] pb-4 text-[#212529]">
						Veranstaltungen
					</span>
				</h2>
				<PageCard>
					{
						events
							.sort((a, b) => (a.data.date && b.data.date && a.data.date > b.data.date ? -1 : 1))
							.map((event) => (
								<div class="flex flex-row py-6">
									<div class="basis-1/3 p-4">
										<a href={createBaseurl(`events/${event.slug}`)}>
											<img
												src={createBaseurl(event.data.image?.slice(1))}
												alt={event.data.title}
												class="h-auto w-[400px]"
											/>
										</a>
									</div>
									<div class="basis-2/3 p-4">
										<h2 class="text-2xl">{event.data.title}</h2>
										<p>{event.data.type}</p>
										<p>
											Autor:{" "}
											{event.data.authors.map(
												(author: Author) => author.lastName + ", " + author.firstName + " ",
											)}
										</p>
										<p>
											{event.data.date?.toLocaleString("de-DE", {
												year: "numeric",
												month: "long",
												day: "numeric",
											})}
										</p>
										<p>{event.data.place}</p>
									</div>
								</div>
							))
					}
				</PageCard>
			</PageSection>
		</div>
	</PageContent>
</Page>
